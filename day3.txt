<template>
  <div class="container">
    <form @submit.prevent="registerUser">
      <div class="form-group">
        <label for="uname">UserName</label>
        <input
          type="text"
          v-model="form.uname"
          required
          class="form-control"
          id="exampleInputEmail1"
          placeholder="UserName"
        />
      </div>
      <div class="form-group">
        <label for="exampleInputEmail1">Email address</label>
        <input
          type="email"
          v-model="form.email"
          required
          class="form-control"
          id="exampleInputEmail1"
          placeholder="Email"
        />
      </div>
      <div class="form-group">
        <label for="exampleInputPassword1">Password</label>
        <input
          type="password"
          v-model="form.password"
          required
          class="form-control"
          id="exampleInputPassword1"
          placeholder="Password"
        />
      </div>

      <button type="submit" :disabled="loading" class="btn btn-success">
        {{ loading ? "Adding user.....!" : "Register" }}
      </button>
    </form>
    <p v-if="message">{{ message }}</p>
  </div>
</template>

<script lang="ts" setup>
import { ref } from "vue";
import axios from "axios";
// define the form data with TS

interface User {
  uname: string;
  email: string;
  password: string;
}
// declare the default values to the prop
const form = ref<User>({
  uname: "",
  email: "",
  password: "",
});

const message = ref(null);
const loading = ref(false);

const registerUser = async () => {
  loading.value = true;

  try {
    const response = await axios.post(
      "http://localhost:3000/users",
      form.value
    );
    message.value = "Registration SuccessFull";
    console.log("User Added");
    form.value = { uname: "", email: "", password: "" };
  } catch (error) {
    message.value = "Registration Failed...!";
    console.log(error);
  } finally {
    loading.value = false;
  }
};
</script>

<style scoped></style>
