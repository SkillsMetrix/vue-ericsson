<script setup>
import { ref, onMounted } from "vue";
import WeatherBanner from "./WeatherBanner.vue";
import CitySearch from "./CitySearch.vue";
import CityList from "./CityList.vue";
import axios from "axios";
import { useCitiesStore } from "../../src/stores/cities";

const cityStore = useCitiesStore();

// message to display for Banner
const messageToDisplay = ref("");

const messageType = ref("Info");

const openweathermapApiKey = ref("b3aaa0b3323c0baab93aff38f75b44cb");

onMounted(() => {
  console.log("mounted");

  searchCity("mumbai");
});
const searchCity = async (inputCity) => {
  var latitude = 0.0;
  var longitude = 0.0;
  var city = "";
  var state = "";
  var country = "";
  try {
    const response = await axios.get(
      "https://api.openweathermap.org/geo/1.0/direct?q=" +
        inputCity +
        "&APPID=" +
        openweathermapApiKey.value
    );

    latitude = response.data[0].lat;

    longitude = response.data[0].lon;

    city = response.data[0].name;

    if ("state" in response.data[0]) {
      state = response.data[0].state;
    }
    country = response.data[0].country;
  } catch (error) {
    console.log(error);
    messageType.value = "Error";
    messageToDisplay.value =
      "Error...! unable to retrive data for " + inputCity;
  }
  if (city !== "") {
    try {
      const response2 = await axios.get(
        "https://api.openweathermap.org/data/2.5/weather?lat=" +
          latitude +
          "&lon=" +
          longitude +
          "&units=imperial&APPID=" +
          openweathermapApiKey.value
      );

      cityStore.addCity(
        city,
        state,
        country,
        response2.data.weather[0].main,
        response2.data.main.temp,
        response2.data.main.temp_max,
        response2.data.main.temp_min
      );
    } catch (error) {
      console.log(error);
    }
  }
};
const clearMessage = () => {
  (messageToDisplay.value = ""), (messageType.value = "Infor");
};
</script>

<template>
  <div class="content">
    <WeatherBanner
      class="banner"
      v-bind:bannerMessage="messageToDisplay"
      v-bind:bannerType="messageType"
      v-on:clear-banner="clearMessage"
    ></WeatherBanner>
    <CitySearch
      class="weather-search"
      v-on:search-city="searchCity"
    ></CitySearch>
    <CityList class="cities"></CityList>
  </div>
</template>
