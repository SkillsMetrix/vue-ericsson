<script setup>
import { ref, computed } from 'vue'

const emit = defineEmits(['search-city'])
 
const inputCity = ref('')

 const searchDisabled = computed(() => {
  if (inputCity.value) {
    return false
  }
  return true
})
const clearDisabled = computed(() => {
  if (inputCity.value) {
    return false
  }
  return true
})


const searchCity = () => {
  emit('search-city', inputCity.value)
}

const clearCity = () => {
  inputCity.value = ''
}
</script>

<template>
  <div class="city-search">
    <div class="city-search-title">
      <h2>Weather Search</h2>
    </div>
    <div class="city-search-input">
      <label for="cityInput">City:</label>
      <input type="text" id="cityInput" v-model="inputCity" placeholder="Enter a city name...">
      <br>
      <div class="city-search-buttons">
        <button type="submit" v-on:click="searchCity" v-bind:disabled="searchDisabled">Search</button>
        <button type="reset" v-on:click="clearCity" v-bind:disabled="clearDisabled">Clear</button>
      </div>
    </div>
  </div>
</template>

<style scoped>
.city-search {
  margin: auto;
}

.city-search-title h2 {
  text-align: center;
  margin-bottom: 0.5em;
}

.city-search-buttons {
  margin: 0.5em;
}

.city-search-input {
  text-align: center;
}

.city-search-input label {
  font-size: 1.35em;
  margin-right: 0.5em;
}

.city-search-input input {
  font-size: 1.1em;
}
</style>


-



<script setup>
import { ref, onMounted } from 'vue'
import WeatherBanner from '@/components/WeatherBanner.vue'
import CitySearch from '@/components/CitySearch.vue'
import CityList from '@/components/CityList.vue'
import axios from 'axios'
import { useCitiesStore } from '@/stores/cities'

const cityStore = useCitiesStore()

 
const messageToDisplay = ref('')

 const messageType = ref('Info')

 const openweathermapApiKey = ref('')

 
 

 
const searchCity = async (inputCity) => {
  var latitude = 0.0
  var longitude = 0.0
  var city = ''
  var state = ''
  var country = ''

   
  try {
    const response = await axios.get('https://api.openweathermap.org/geo/1.0/direct?q=' + inputCity + '&APPID=' + openweathermapApiKey.value)

 
    console.log("Successfully retrieved coordinates for " + inputCity + ": " + response.data[0].lat + ", " + response.data[0].lon)

     latitude = response.data[0].lat
    longitude = response.data[0].lon
    city = response.data[0].name
    if ('state' in response.data[0]) { state = response.data[0].state }
    country = response.data[0].country
  } catch(error) {
     messageType.value = 'Error'
    messageToDisplay.value = 'ERROR! Unable to retrieve coordinates (latitude, longitude) for ' + inputCity + '!'
    console.log(error.message)
  }

  if (city !== '') {
 
    try {
      const response2 = await axios.get('https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&units=imperial&APPID=' + openweathermapApiKey.value)

     
      console.log("Retrieved current temperature: " + response2.data.main.temp)
      console.log("and high/low: " + response2.data.main.temp_max + " / " + response2.data.main.temp_min)

 
      cityStore.addCity(
        city, state, country,
        response2.data.weather[0].main,
        response2.data.main.temp,
        response2.data.main.temp_max,
        response2.data.main.temp_min
      )
    } catch(error) {
      // handle error
      messageType.value = 'Error'
      messageToDisplay.value = 'ERROR! Unable to retrieve weather data for ' + inputCity + '!'
      console.log(error)
    }
  }
}

const clearMessage = () => {
  messageToDisplay.value = ''
  messageType.value = 'Info'
}
</script>

<template>
    <div class="content">
        <WeatherBanner class="banner" v-bind:bannerMessage="messageToDisplay" v-bind:bannerType="messageType" v-on:clear-banner="clearMessage"></WeatherBanner>
        <CitySearch class="weather-search" v-on:search-city="searchCity"></CitySearch>
        <CityList class="cities"></CityList>
    </div>
</template>

<style>
.content {
  margin: auto;
  max-width: 1080px;
  padding-bottom: 1em;
}
</style>

